db.createCollection("boats",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "name",
		"__created__"
      ],
      properties: {
        name: {
          bsonType: "string",
          description: "name is required"
        },
        capacity: {
          bsonType: "int",
          description: "capacity of boat"
        },
        __accessed__: {
          bsonType: "date",
          description: "time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "time of creation"
        },
        __gaps__: {
          bsonType: "array",
          description: "list of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("departments",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "name",
        "director",
        "__created__"
      ],
      properties: {
        name: {
          bsonType: "string",
          description: "Name is required"
        },
        vk: {
          bsonType: "string",
          pattern: "^(https?://)?vk\.com/.+$",
          description: "must match with pattern. examples:https://vk.com/name_of_your_group, http://vk.com/name_of_your_group, vk.com/name_of_your_group"
        },
        director: {
          bsonType: "objectId",
          description: "Director is required. Ref to director"
        },
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("property_types",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "name",
        "__created__"
      ],
      properties: {
        name: {
          bsonType: "string",
          description: "Name is required"
        },
        description: {
          bsonType: "string",
          description: "Description of property type"
        },
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("system_states",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "name",
        "__created__"
      ],
      properties: {
        name: {
          bsonType: "string",
          description: "Name is required"
        },
        description: {
          bsonType: "string",
          description: "Description of property type"
        },
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("system_types",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "name",
        "__created__"
      ],
      properties: {
        name: {
          bsonType: "string",
          description: "Name is required"
        },
        description: {
          bsonType: "string",
          description: "Description of property type"
        },
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("specializations",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "name",
        "__created__"
      ],
      properties: {
        name: {
          bsonType: "string",
          description: "Name is required"
        },
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("locations",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "name",
        "__created__"
      ],
      properties: {
        name: {
          bsonType: "string",
          description: "Name is required"
        },
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("sensors",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "name",
		"location",
        "__created__"
      ],
      properties: {
        name: {
          bsonType: "string",
          description: "Name is required"
        },
		location: {
          bsonType: "objectId",
          description: "Location is required. Ref to entity locations"
        },
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("systems",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "name",
		"type",
		"launched",
		"checked",
		"supervisor",
		"state",
        "__created__"
      ],
      properties: {
        name: {
          bsonType: "string",
          description: "Name is required"
        },
		type: {
          bsonType: "objectId",
          description: "Type is required. Ref to entity system_types"
        },
		serial_number: {
          bsonType: "double",
          description: "Serial number of system"
        },		
        launched: {
          bsonType: "date",
          description: "Is required. Time of the launch"
        },
        checked: {
          bsonType: "date",
          description: "Is required. Time of the last check"
        },	
		supervisor: {
          bsonType: "objectId",
          description: "supervisor is required. Ref to entity people"
        },		
		state: {
          bsonType: "objectId",
          description: "state is required. Ref to entity system_states"
        },				
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("people",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "name",
		"surname",
		"department",
		"specialization",
        "__created__"
      ],
      properties: {
        name: {
          bsonType: "string",
          description: "Name is required"
        },
        surname: {
          bsonType: "string",
          description: "surname is required"
        },
        patronymic: {
          bsonType: "string",
          description: "patronymic isn't required"
        },		
		department: {
          bsonType: "objectId",
          description: "department is required. Ref to entity department"
        },
		phone: {
			bsonType: "string",
			pattern : "^8 [0-9]{3} [0-9]{3}-[0-9]{2}-[0-9]{2}$",
			description: "must match with pattern. examples: +79261234567; 8(926)123-45-67; 8-926-123-45-67"
            
        },		
		specialization: {
          bsonType: "objectId",
          description: "specialization is required. Ref to entity specializations"
        },				
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("properties",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "name",
		"type",
		"admission",
		"department",
        "__created__"
      ],
      properties: {
        name: {
          bsonType: "string",
          description: "Name is required"
        },
		type: {
          bsonType: "objectId",
          description: "Type is required. Ref to entity property_types"
        },	
        admission: {
          bsonType: "date",
          description: "Is required. Time of the admission"
        },
        comissioning: {
          bsonType: "date",
          description: "Time of the comissioning"
        },			
		department: {
          bsonType: "objectId",
          description: "department is required. Ref to entity department"
        },		
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("shifts",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
		"start",
		"end",
		"department",
		"chief",
		"workers",
        "__created__"
      ],
      properties: {	
        start: {
          bsonType: "date",
          description: "Is required. Time of the shift start"
        },
        end: {
          bsonType: "date",
          description: "Is required. Time of the shift end"
        },			
		department: {
          bsonType: "objectId",
          description: "department is required. Ref to entity department"
        },
		chief: {
          bsonType: "objectId",
          description: "chief is required. Ref to entity people"
        },		
		workers: {
          bsonType: "array",
          description: "List of workers id",
          items: {
            bsonType: "objectId"
          }
        },		
		requirements: {
          bsonType: "string",
          description: "requirements for shift"
        },
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("operations",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
		"name",
		"start",
		"end",
		"head",
		"executors",
        "__created__"
      ],
      properties: {	
	    name: {
          bsonType: "string",
          description: "Name is required"
        },
        start: {
          bsonType: "date",
          description: "Is required. Time of the operation start"
        },
        end: {
          bsonType: "date",
          description: "Is required. Time of the operation end"
        },	
		head: {
          bsonType: "objectId",
          description: "chief is required. Ref to entity people"
        },			
		executors: {
          bsonType: "array",
          description: "List of executors id",
          items: {
            bsonType: "objectId"
          }
        },		
		requirements: {
          bsonType: "objectId",
          description: "is required. Ref to entity requirements"
        },
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})

db.createCollection("requirements",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
		"name",
		"content",
        "__created__"
      ],
      properties: {	
	    name: {
          bsonType: "string",
          description: "Name is required"
        },
		content: {
          bsonType: "objectId",
        },			
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})

db.createCollection("system_tests",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
		"result",
		"system",
        "__created__"
      ],
      properties: {	
        timestamp: {
          bsonType: "date",
          description: "Time of system test"
        },
		system: {
          bsonType: "objectId",
		  description: "Is required. Ref to entity system_types"
        },	
		result: {
          bsonType: "int",
		  description: "Is required. Result of system test(number)"
        },			
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("control_actions",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
		"mac_address",
		"user",
		"command",
		"result",
        "__created__"
      ],
      properties: {	
        timestamp: {
          bsonType: "date",
          description: "Time of system test"
        },
		mac_address: {
          bsonType: "objectId",
		  description: "Is required"
        },	
		user: {
          bsonType: "objectId",
		  description: "Is required. Ref to entity people"
        },			
	    command: {
          bsonType: "string",
          description: "Command is required"
        },	
	    params: {
          bsonType: "string",
          description: "Params isn't required"
        },	
	    result: {
          bsonType: "string",
          description: "Result is required"
        },			
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("positions",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
		"x",
		"y",
		"z",
        "__created__"
      ],
      properties: {	
        timestamp: {
          bsonType: "date",
          description: "Time of system test"
        },
		user: {
          bsonType: "objectId",
		  description: "Is required. Ref to entity people"
        },	
		speed: {
          bsonType: "double",
		  description: "speed isn't required"
        },	
		attack_angle: {
          bsonType: "double",
		  description: "attack_angle isn't required"
        },			
		direction_angle: {
          bsonType: "double",
		  description: "direction_angle isn't required"
        },			
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("sensor_data",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
		"source",
		"event",
		"value",
        "__created__"
      ],
      properties: {	
        timestamp: {
          bsonType: "date",
          description: "Time of sensor data"
        },
		source: {
          bsonType: "objectId",
		  description: "source is required"
        },
		event: {
          bsonType: "string",
		  description: "event is required"
        },	
		meaning: {
          bsonType: "string",
		  description: "meaning isn't required"
        },	
		value: {
          bsonType: "double",
		  description: "value is required"
        },		
		units: {
          bsonType: "string",
		  description: "units isn't required"
        },		
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("shift_states",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
		"shift",
        "__created__"
      ],
      properties: {	
        timestamp: {
          bsonType: "date",
          description: "Time of shift state"
        },
		shift: {
          bsonType: "objectId",
		  description: "shift is required. Ref to entity shifts"
        },
		warning_level: {
          bsonType: "string",
		  description: "warning level isn't required"
        },	
		cartridges: {
          bsonType: "int",
		  description: "cartridges isn't required"
        },	
		air: {
          bsonType: "int",
		  description: "state of air. isn't required"
        },			
		electricity: {
          bsonType: "int",
		  description: "state of electricity. isn't required"
        },	
		comment: {
          bsonType: "string",
		  description: "comment isn't required"
        },			
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})
db.createCollection("operation_states",
{
  validator: {
    $jsonSchema: {
      bsonType: "object",
      required: [
        "boat",
        "operation",
        "__created__"
      ],
      properties: {
        timestamp: {
          bsonType: "date",
          description: "Time of operation state"
        },
        boat: {
          bsonType: "objectId",
          description: "boat is required. Ref to entity boats"
        },
        operation: {
          bsonType: "objectId",
          description: "operation is required. Ref to entity operations"
        },
        status: {
          bsonType: "string",
          description: "status isn't required"
        },
        distance: {
          bsonType: "double",
          description: "distance isn't required"
        },
        zenith: {
          bsonType: "double"
        },
        azimuth: {
          bsonType: "double"
        },
        hydrogenium: {
          bsonType: "double"
        },
        helium: {
          bsonType: "double"
        },
        lithium: {
          bsonType: "double"
        },
        beryllium: {
          bsonType: "double"
        },
        borum: {
          bsonType: "double"
        },
        carboneum: {
          bsonType: "double"
        },
        nitrogenium: {
          bsonType: "double"
        },
        oxygenium: {
          bsonType: "double"
        },
        fluorum: {
          bsonType: "double"
        },
        neon: {
          bsonType: "double"
        },
        natrium: {
          bsonType: "double"
        },
        magnesium: {
          bsonType: "double"
        },
        aluminium: {
          bsonType: "double"
        },
        silicium: {
          bsonType: "double"
        },
        phosphorus: {
          bsonType: "double"
        },
        sulfur: {
          bsonType: "double"
        },
        chlorum: {
          bsonType: "double"
        },
        argon: {
          bsonType: "double"
        },
        kalium: {
          bsonType: "double"
        },
        calcium: {
          bsonType: "double"
        },
        scandium: {
          bsonType: "double"
        },
        titanium: {
          bsonType: "double"
        },
        vanadium: {
          bsonType: "double"
        },
        chromium: {
          bsonType: "double"
        },
        manganum: {
          bsonType: "double"
        },
        ferrum: {
          bsonType: "double"
        },
        cobaltum: {
          bsonType: "double"
        },
        niccolum: {
          bsonType: "double"
        },
        cuprum: {
          bsonType: "double"
        },
        zincum: {
          bsonType: "double"
        },
        gallium: {
          bsonType: "double"
        },
        germanium: {
          bsonType: "double"
        },
        arsenicum: {
          bsonType: "double"
        },
        selenium: {
          bsonType: "double"
        },
        bromum: {
          bsonType: "double"
        },
        crypton: {
          bsonType: "double"
        },
        rubidium: {
          bsonType: "double"
        },
        strontium: {
          bsonType: "double"
        },
        yttrium: {
          bsonType: "double"
        },
        zirconium: {
          bsonType: "double"
        },
        niobium: {
          bsonType: "double"
        },
        molybdaenum: {
          bsonType: "double"
        },
        technetium: {
          bsonType: "double"
        },
        ruthenium: {
          bsonType: "double"
        },
        rhodium: {
          bsonType: "double"
        },
        palladium: {
          bsonType: "double"
        },
        argentum: {
          bsonType: "double"
        },
        cadmium: {
          bsonType: "double"
        },
        indium: {
          bsonType: "double"
        },
        stannum: {
          bsonType: "double"
        },
        stibium: {
          bsonType: "double"
        },
        tellurium: {
          bsonType: "double"
        },
        iodium: {
          bsonType: "double"
        },
        xenon: {
          bsonType: "double"
        },
        caesium: {
          bsonType: "double"
        },
        barium: {
          bsonType: "double"
        },
        lanthanum: {
          bsonType: "double"
        },
        cerium: {
          bsonType: "double"
        },
        praseodymium: {
          bsonType: "double"
        },
        neodymium: {
          bsonType: "double"
        },
        promethium: {
          bsonType: "double"
        },
        samarium: {
          bsonType: "double"
        },
        europium: {
          bsonType: "double"
        },
        gadolinium: {
          bsonType: "double"
        },
        terbium: {
          bsonType: "double"
        },
        dysprosium: {
          bsonType: "double"
        },
        holmium: {
          bsonType: "double"
        },
        erbium: {
          bsonType: "double"
        },
        thulium: {
          bsonType: "double"
        },
        ytterbium: {
          bsonType: "double"
        },
        lutetium: {
          bsonType: "double"
        },
        hafnium: {
          bsonType: "double"
        },
        tantalum: {
          bsonType: "double"
        },
        wolframium: {
          bsonType: "double"
        },
        rhenium: {
          bsonType: "double"
        },
        osmium: {
          bsonType: "double"
        },
        iridium: {
          bsonType: "double"
        },
        platinum: {
          bsonType: "double"
        },
        aurum: {
          bsonType: "double"
        },
        hydrargyrum: {
          bsonType: "double"
        },
        thallium: {
          bsonType: "double"
        },
        plumbum: {
          bsonType: "double"
        },
        bismuthum: {
          bsonType: "double"
        },
        polonium: {
          bsonType: "double"
        },
        astatum: {
          bsonType: "double"
        },
        radon: {
          bsonType: "double"
        },
        francium: {
          bsonType: "double"
        },
        radium: {
          bsonType: "double"
        },
        actinium: {
          bsonType: "double"
        },
        thorium: {
          bsonType: "double"
        },
        protactinium: {
          bsonType: "double"
        },
        uranium: {
          bsonType: "double"
        },
        neptunium: {
          bsonType: "double"
        },
        plutonium: {
          bsonType: "double"
        },
        americium: {
          bsonType: "double"
        },
        curium: {
          bsonType: "double"
        },
        berkelium: {
          bsonType: "double"
        },
        californium: {
          bsonType: "double"
        },
        einsteinium: {
          bsonType: "double"
        },
        fermium: {
          bsonType: "double"
        },
        mendelevium: {
          bsonType: "double"
        },
        nobelium: {
          bsonType: "double"
        },
        lawrencium: {
          bsonType: "double"
        },
        rutherfordium: {
          bsonType: "double"
        },
        dubnium: {
          bsonType: "double"
        },
        seaborgium: {
          bsonType: "double"
        },
        bohrium: {
          bsonType: "double"
        },
        hassium: {
          bsonType: "double"
        },
        meitnerium: {
          bsonType: "double"
        },
        darmstadtium: {
          bsonType: "double"
        },
        roentgenium: {
          bsonType: "double"
        },
        copernicium: {
          bsonType: "double"
        },
        nihonium: {
          bsonType: "double"
        },
        flerovium: {
          bsonType: "double"
        },
        moscovium: {
          bsonType: "double"
        },
        livermorium: {
          bsonType: "double"
        },
        tennessium: {
          bsonType: "double"
        },
        oganesson: {
          bsonType: "double"
        },
        comment: {
          bsonType: "string",
          description: "comment isn't required"
        },
        __accessed__: {
          bsonType: "date",
          description: "Time of the last access"
        },
        __created__: {
          bsonType: "date",
          description: "Time of creation is required."
        },
        __gaps__: {
          bsonType: "array",
          description: "List of numbers",
          items: {
            bsonType: "double"
          }
        },
        __cause__: {
          bsonType: [
            "string",
            "null"
          ],
          description: "The reason why the record was moved"
        }
      }
    }
  }
})


